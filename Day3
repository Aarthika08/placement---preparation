Day3

                                                     shopup preparation-3
                                                           Data Structures




1 Implement a stack using an linked list

print(": Implement a stack using an linked list")
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
        
        
class Stack:  
    def __init__(self):
        self.head=None
        
    def isempty(self):
        if self.head == None:
            return True
        else:
            return False    
    def push(self,data):
        if self.head==None:
            self.head=Node(data)
        else:
            Newnode=Node(data)
            Newnode.next=self.head
            self.head=Newnode
    def pop(self):  
        if self.isempty():
            return None
        else:
            pNewnode=self.head
            self.head=self.head.next
            pNewnode.next=None
            return pNewnode.data
    def peek(self):  
        if self.isempty():
            return None
 
        else:
            return self.head.data
 
             
    def display(self):
        # i=self.head
        # if i==None:
        #     return True
        # else:
             
        #      while(i!=None):
        #          print(i.val)
        #          i=i.next
        #      return  
        iternode = self.head
        if self.isempty():
            print("Stack Underflow")
 
        else:
 
            while(iternode != None):
 
                print(iternode.data, end = "")
                iternode = iternode.next
                if(iternode != None):
                    print(" -> ", end = "")
            return


            
MyStack = Stack()
   
MyStack.push(11)
MyStack.push(22)
MyStack.push(33)
MyStack.push(44)
 
  # Display stack elements
MyStack.display()
 
  # Print top element of stack
print("\nTop element is ", MyStack.peek())
 
  # Delete top elements of stack
MyStack.pop()
MyStack.pop()
 
  # Display stack elements
MyStack.display()
 
  # Print top element of stack
print("\nTop element is ", MyStack.peek())



In arrays
a=[1,2,3,4]
a.append('a')
a.append('b')
a.append('c')

print(a.pop())
print(a)
print(a.pop())
print(a)
print(a.pop())
print(a)
print(a.pop())
print(a.pop())
print(a.pop())
print(a)


