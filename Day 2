                                                                   SHOP UP PREPARATION-II
                                                                         ARRAYS 

1.Given an array of integers, find the maximum subarray sum.
# : Given an array of integers, find the maximum subarray sum.

n=int(input())
l=[]
p=[]
k=3
su=0
for i in range(0,n):
    k=int(input())
    l.append(k)
for i in range(0,n):
    for j in range(i):
        su=su+i
        if su>=k:
            print("Hello World",su)
            print("Hello World",i,j)
            k=su
            p.append(su)

            
           
# print(reversed(l))    
print(l)
print(p)
print('maximum subarray values is ',max(p))

# print(l[::-1])    





2.
Maximum Subarray
Medium
29.9K
1.3K
Companies
Given an integer array nums, find the 
subarray
 with the largest sum, and return its sum.
 
Example 1:
Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.


Example 2:
Input: nums = [1]
Output: 1
Explanation: The subarray [1] has the largest sum 1.


Example 3:
Input: nums = [5,4,-1,7,8]
Output: 23
Explanation: The subarray [5,4,-1,7,8] has the largest sum 23.


 
Constraints:
1 <= nums.length <= 105
-104 <= nums[i] <= 104


class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        temp=0
        k=nums[0]
        # for i in range(0,len(nums)):
        for i in nums:
            if temp<0:
                temp=0
            temp=temp+i
            k=max(k,temp)
        return k
           





3.Reverse the array
Input  : arr[] = {1, 2, 3}
Output : arr[] = {3, 2, 1}




n=int(input())
l=[]
for i in range(0,n):
    k=int(input())
    l.append(k)
# print(reversed(l))    
# print(l)
print(l[::-1])    




4. Intersection of Two Arrays
Easy
4.8K
2.1K
Companies
Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.
 
Example 1:
Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]


Example 2:
Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Explanation: [4,9] is also accepted.


 
class Solution:
    def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:
        l=[]
        for i in nums1:
             for j in nums2:
                 if i==j:
                     l.append(i)
        return set(l)



 z=set(nums1).intersection(set(nums2))
        return z





5.Intersection of Two Arrays II
Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must appear as many times as it shows in both arrays and you may return the result in any order.
 
Example 1:
Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2,2]


Example 2:
Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [4,9]
Explanation: [9,4] is also accepted.



class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        list1=[]
        if len(nums1)>len(nums2):


         for i in range(len(nums2)):
       
            if nums2[i]  in nums1:
                 nums1.remove(nums2[i])
                 list1.append(nums2[i])


        else:
         for i in range(len(nums1)):
       
            if nums1[i]  in nums2:  
                     list1.append(nums1[i])
                     nums2.remove(nums1[i])


        return list1    






